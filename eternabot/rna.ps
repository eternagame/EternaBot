%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.4
%%CreationDate: Wed Jan  7 14:29:59 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
   exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
   % write text at base i plus offset dx, dy
   4 3 roll 1 sub coor exch get aload pop moveto
   3 1 roll fsize mul exch fsize mul exch rmoveto
   show
} bind def
/cmark { % i cmark   draw circle around base i
   newpath 1 sub coor exch get aload pop
   fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c cmark
   % draw basepair i,j with c counter examples in gray
   gsave
   3 min [0 0.33 0.66 0.9] exch get setgray
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   grestore
} bind def
/segmark { % f i j lw r g b segmark
   % mark segment [i,j] with outline width lw and color rgb
   % use omark and Fomark instead
   gsave
    setrgbcolor setlinewidth
    newpath
    1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch {
	    coor exch get aload pop lineto
    } for
    { closepath fill } if  stroke
   grestore
} bind def
/omark { % i j lw r g b omark
   % stroke segment [i..j] with linewidth lw, color rgb
   false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
   % fill segment [i..j] with color rgb
   % should precede drawbases
   1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
   % fill block between pairs (i,j) and (k,l) with color rgb
   % should precede drawbases
   gsave
    setrgbcolor
    newpath
    exch 4 3 roll exch 1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch { coor exch get aload pop lineto } for
    exch 1 sub exch 1 sub dup
    coor exch get aload pop lineto
    exch 1 exch { coor exch get aload pop lineto } for
    closepath fill stroke
   grestore
} bind def
/hsb {
    dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
   % draw basepair i,j in color
   % 1 index 0.00 ne {
   gsave
   newpath
   hsb
   fsize setlinewidth
   1 sub coor exch get aload pop moveto
   1 sub coor exch get aload pop lineto
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/cutpoint 77 def
/sequence (\
AAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAUGAGGAUCACCCAUGUAAAAAAAAAAAAAAAAAAA AUAAGACGAGCAAAAAGCUUGU\
) def
/coor [
[155.029 254.312]
[141.608 258.459]
[127.881 261.441]
[113.948 263.236]
[99.913 263.831]
[85.879 263.221]
[71.949 261.411]
[58.225 258.415]
[44.808 254.254]
[31.796 248.959]
[19.287 242.568]
[7.370 235.130]
[-3.865 226.698]
[-14.337 217.335]
[-23.968 207.109]
[-32.688 196.095]
[-40.432 184.375]
[-47.144 172.035]
[-52.774 159.165]
[-57.281 145.860]
[-60.631 132.218]
[-62.801 118.339]
[-63.773 104.326]
[-63.542 90.280]
[-62.108 76.306]
[-59.482 62.506]
[-55.684 48.982]
[-50.741 35.833]
[-44.690 23.155]
[-37.576 11.043]
[-29.449 -0.416]
[-20.371 -11.136]
[-10.409 -21.039]
[0.366 -30.052]
[11.873 -38.109]
[24.028 -45.151]
[36.742 -51.125]
[49.921 -55.989]
[63.468 -59.705]
[77.283 -62.248]
[75.885 -77.183]
[74.488 -92.117]
[73.090 -107.052]
[71.692 -121.987]
[67.716 -130.412]
[70.491 -137.407]
[69.558 -152.378]
[60.046 -165.736]
[67.103 -180.539]
[83.471 -181.558]
[92.311 -167.746]
[84.529 -153.310]
[85.462 -138.339]
[86.627 -123.385]
[88.025 -108.450]
[89.422 -93.515]
[90.820 -78.580]
[92.218 -63.646]
[108.490 -63.610]
[124.678 -61.961]
[140.623 -58.714]
[156.167 -53.902]
[171.156 -47.571]
[185.444 -39.784]
[198.889 -30.619]
[211.359 -20.165]
[222.730 -8.526]
[232.890 4.185]
[241.740 17.840]
[249.191 32.305]
[255.170 47.439]
[259.619 63.091]
[262.493 79.107]
[263.764 95.329]
[263.419 111.598]
[261.463 127.751]
[257.914 143.632]
[252.807 159.081]
[246.192 173.948]
[238.135 188.086]
[228.716 201.354]
[218.027 213.623]
[206.173 224.770]
[193.273 234.687]
[201.239 247.397]
[209.205 260.107]
[217.172 272.816]
[225.138 285.526]
[233.104 298.236]
[248.357 303.210]
[253.842 318.286]
[245.353 331.899]
[229.401 333.606]
[218.223 322.098]
[220.395 306.202]
[212.428 293.493]
[204.462 280.783]
[196.496 268.073]
[188.529 255.363]
[180.563 242.654]
] def
/pairs [
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[46 53]
[47 52]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
] def

init

% Start Annotations
1 77 9  0 0.9 0.2 omark
79 100 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
