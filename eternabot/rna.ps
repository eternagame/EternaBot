%!PS-Adobe-3.0 EPSF-3.0
<<<<<<< HEAD
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.4
%%CreationDate: Wed Jan 14 22:41:15 2015
=======
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Thu Jan 15 10:21:01 2015
>>>>>>> Michelle.switch
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
<<<<<<< HEAD
AGCAAAAGCU\
) def
/coor [
[92.500 92.500]
[92.500 77.500]
[92.500 62.500]
[83.836 48.576]
[91.800 34.241]
[108.200 34.241]
[116.164 48.576]
[107.500 62.500]
[107.500 77.500]
[107.500 92.500]
] def
/pairs [
[1 10]
[2 9]
[3 8]
=======
GCUGCAACCUCAUCGCCUCACAUGAGGAUCACCCAUGUCUUGCUCGCGAAGGGCGACAAGCUCUUCAGCAAACGGAA\
) def
/coor [
[37.08513641 174.16085815]
[24.30834961 178.73080444]
[10.81011868 180.01126099]
[-2.57701349 177.92852783]
[-15.02865601 172.61616516]
[-25.77933502 164.40646362]
[-34.16955185 153.80963135]
[-39.68623734 141.48216248]
[-54.49199295 143.88833618]
[-69.29774475 146.29449463]
[-84.10350037 148.70066833]
[-98.90925598 151.10684204]
[-113.71501160 153.51300049]
[-120.58337402 167.42721558]
[-134.33419800 174.61709595]
[-149.68000793 172.31800842]
[-160.72001648 161.41400146]
[-163.20913696 146.09785461]
[-156.19023132 132.25898743]
[-142.36222839 125.21868134]
[-127.04225922 127.68411255]
[-116.12117767 138.70726013]
[-101.31542206 136.30108643]
[-86.50966644 133.89491272]
[-71.70391846 131.48873901]
[-56.89816284 129.08258057]
[-42.09240723 126.67640686]
[-40.00906372 110.27692413]
[-33.08935165 95.24443054]
[-21.96268082 82.97124481]
[-7.64864874 74.59757233]
[8.53639889 70.90555573]
[25.10041237 72.24626160]
[40.51319122 78.50631714]
[53.34774399 89.11739349]
[62.41239929 103.10781097]
[76.82016754 98.93454742]
[91.22794342 94.76128387]
[97.68309784 89.53759766]
[106.30035400 90.72264099]
[120.86448669 87.13290405]
[135.42860413 83.54317474]
[149.99273682 79.95343781]
[164.55686951 76.36370087]
[168.70985413 72.32564545]
[173.54310608 70.66343689]
[177.95248413 71.20511627]
[181.09284973 73.33337402]
[195.98347473 71.52532196]
[210.87411499 69.71726990]
[225.76475525 67.90921783]
[240.65538025 66.10117340]
[255.54602051 64.29312134]
[270.43664551 62.48506927]
[281.42276001 50.79383087]
[297.40072632 52.23730469]
[306.11364746 65.70818329]
[300.87771606 80.87275696]
[285.70947266 86.09806824]
[272.24468994 77.37570190]
[257.35406494 79.18375397]
[242.46342468 80.99180603]
[227.57279968 82.79985046]
[212.68215942 84.60790253]
[197.79153442 86.41595459]
[182.90089417 88.22400665]
[168.14660645 90.92783356]
[153.58247375 94.51756287]
[139.01834106 98.10729980]
[124.45421600 101.69703674]
[109.89009094 105.28677368]
[95.40120697 109.16905212]
[80.99343109 113.34231567]
[66.58566284 117.51557922]
[66.82121277 131.13627625]
[63.69641113 144.38484192]
[57.40898132 156.44581604]
] def
/pairs [
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[36 74]
[37 73]
[38 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
>>>>>>> Michelle.switch
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
