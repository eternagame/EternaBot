%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.4
%%CreationDate: Fri Jan  9 15:04:52 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
   exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
   % write text at base i plus offset dx, dy
   4 3 roll 1 sub coor exch get aload pop moveto
   3 1 roll fsize mul exch fsize mul exch rmoveto
   show
} bind def
/cmark { % i cmark   draw circle around base i
   newpath 1 sub coor exch get aload pop
   fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c cmark
   % draw basepair i,j with c counter examples in gray
   gsave
   3 min [0 0.33 0.66 0.9] exch get setgray
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   grestore
} bind def
/segmark { % f i j lw r g b segmark
   % mark segment [i,j] with outline width lw and color rgb
   % use omark and Fomark instead
   gsave
    setrgbcolor setlinewidth
    newpath
    1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch {
	    coor exch get aload pop lineto
    } for
    { closepath fill } if  stroke
   grestore
} bind def
/omark { % i j lw r g b omark
   % stroke segment [i..j] with linewidth lw, color rgb
   false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
   % fill segment [i..j] with color rgb
   % should precede drawbases
   1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
   % fill block between pairs (i,j) and (k,l) with color rgb
   % should precede drawbases
   gsave
    setrgbcolor
    newpath
    exch 4 3 roll exch 1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch { coor exch get aload pop lineto } for
    exch 1 sub exch 1 sub dup
    coor exch get aload pop lineto
    exch 1 exch { coor exch get aload pop lineto } for
    closepath fill stroke
   grestore
} bind def
/hsb {
    dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
   % draw basepair i,j in color
   % 1 index 0.00 ne {
   gsave
   newpath
   hsb
   fsize setlinewidth
   1 sub coor exch get aload pop moveto
   1 sub coor exch get aload pop lineto
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/cutpoint 77 def
/sequence (\
AACGGUCUACGCGCUACCAUCUCAGUUUACACGACUAUGACAUGAGGAUCACCCAUGUAGCCUACUACUCGACCAAC AUAAGACGAGCAAAAAGCUUGU\
) def
/coor [
[185.652 255.532]
[173.970 239.940]
[171.528 220.534]
[179.042 202.393]
[169.203 191.071]
[159.364 179.748]
[149.525 168.426]
[139.387 174.723]
[128.463 179.528]
[116.971 182.746]
[105.140 184.312]
[93.206 184.194]
[81.408 182.397]
[69.981 178.954]
[59.153 173.935]
[49.141 167.440]
[40.144 159.599]
[32.342 150.569]
[25.890 140.529]
[20.918 129.679]
[17.524 118.238]
[15.777 106.432]
[15.711 94.498]
[17.328 82.674]
[2.978 78.306]
[-11.372 73.937]
[-25.722 69.569]
[-40.497 75.819]
[-54.527 68.037]
[-57.048 52.193]
[-46.126 40.442]
[-30.141 41.797]
[-21.353 55.219]
[-7.004 59.587]
[7.346 63.956]
[21.696 68.324]
[32.020 49.865]
[46.605 34.549]
[64.537 23.337]
[84.693 16.930]
[83.295 1.996]
[81.898 -12.939]
[80.500 -27.874]
[79.102 -42.809]
[75.126 -51.234]
[77.901 -58.228]
[76.968 -73.199]
[67.456 -86.558]
[74.513 -101.360]
[90.881 -102.380]
[99.721 -88.567]
[91.939 -74.132]
[92.872 -59.161]
[94.037 -44.206]
[95.435 -29.271]
[96.832 -14.337]
[98.230 0.598]
[99.628 15.533]
[114.767 16.833]
[129.428 20.824]
[143.137 27.377]
[155.450 36.280]
[165.968 47.245]
[174.352 59.918]
[180.330 73.887]
[183.709 88.701]
[184.379 103.881]
[182.318 118.935]
[177.594 133.377]
[170.359 146.738]
[160.847 158.587]
[170.686 169.910]
[180.525 181.232]
[190.364 192.554]
[200.717 188.571]
[211.755 187.716]
[222.555 190.049]
[232.219 195.363]
[239.944 203.204]
[245.094 212.908]
[247.250 223.658]
[246.243 234.555]
[242.170 244.688]
[235.382 253.217]
[243.348 265.927]
[251.315 278.636]
[259.281 291.346]
[267.247 304.056]
[275.214 316.766]
[290.466 321.740]
[295.952 336.816]
[287.462 350.429]
[271.510 352.136]
[260.333 340.627]
[262.504 324.732]
[254.538 312.022]
[246.571 299.312]
[238.605 286.603]
[230.639 273.893]
[222.672 261.183]
] def
/pairs [
[4 74]
[5 73]
[6 72]
[7 71]
[24 36]
[25 35]
[26 34]
[27 33]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[46 53]
[47 52]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
] def

init

% Start Annotations
1 77 9  0 0.9 0.2 omark
79 100 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
