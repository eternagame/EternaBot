%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.4
%%CreationDate: Wed Jan  7 14:58:31 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
   exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
   % write text at base i plus offset dx, dy
   4 3 roll 1 sub coor exch get aload pop moveto
   3 1 roll fsize mul exch fsize mul exch rmoveto
   show
} bind def
/cmark { % i cmark   draw circle around base i
   newpath 1 sub coor exch get aload pop
   fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c cmark
   % draw basepair i,j with c counter examples in gray
   gsave
   3 min [0 0.33 0.66 0.9] exch get setgray
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   grestore
} bind def
/segmark { % f i j lw r g b segmark
   % mark segment [i,j] with outline width lw and color rgb
   % use omark and Fomark instead
   gsave
    setrgbcolor setlinewidth
    newpath
    1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch {
	    coor exch get aload pop lineto
    } for
    { closepath fill } if  stroke
   grestore
} bind def
/omark { % i j lw r g b omark
   % stroke segment [i..j] with linewidth lw, color rgb
   false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
   % fill segment [i..j] with color rgb
   % should precede drawbases
   1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
   % fill block between pairs (i,j) and (k,l) with color rgb
   % should precede drawbases
   gsave
    setrgbcolor
    newpath
    exch 4 3 roll exch 1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch { coor exch get aload pop lineto } for
    exch 1 sub exch 1 sub dup
    coor exch get aload pop lineto
    exch 1 exch { coor exch get aload pop lineto } for
    closepath fill stroke
   grestore
} bind def
/hsb {
    dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
   % draw basepair i,j in color
   % 1 index 0.00 ne {
   gsave
   newpath
   hsb
   fsize setlinewidth
   1 sub coor exch get aload pop moveto
   1 sub coor exch get aload pop lineto
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/cutpoint 77 def
/sequence (\
AACAGAACGCUUUCGAUAACACGUUUAAAGGUCGGCCUCACAUGAGGAUCACCCAUGUUACAACGCCGUCUAACCGA AUAAGACGAGCAAAAAGCUUGU\
) def
/coor [
[94.415 264.689]
[79.241 265.985]
[64.854 260.991]
[53.746 250.573]
[47.842 236.535]
[48.165 221.310]
[54.659 207.535]
[66.198 197.597]
[80.783 193.217]
[82.645 178.333]
[84.506 163.449]
[86.368 148.565]
[88.229 133.681]
[74.456 124.909]
[66.034 110.920]
[64.726 94.643]
[70.807 79.488]
[60.621 68.477]
[50.435 57.466]
[40.248 46.456]
[30.062 35.445]
[15.011 30.569]
[12.048 15.972]
[9.223 30.704]
[-3.029 39.358]
[-17.858 37.098]
[-26.974 25.186]
[-25.281 10.282]
[-13.726 0.717]
[1.233 1.840]
[-6.734 -10.870]
[-14.700 -23.579]
[-22.041 -29.315]
[-22.709 -36.811]
[-30.277 -49.762]
[-38.044 -62.594]
[-46.011 -75.304]
[-53.977 -88.014]
[-61.943 -100.723]
[-76.679 -107.920]
[-77.544 -124.296]
[-63.649 -133.006]
[-49.288 -125.089]
[-49.234 -108.690]
[-41.267 -95.980]
[-33.301 -83.270]
[-25.335 -70.560]
[-19.004 -66.493]
[-17.325 -57.329]
[-9.758 -44.378]
[-1.990 -31.546]
[5.976 -18.836]
[13.942 -6.126]
[23.058 5.786]
[37.381 9.874]
[41.073 25.258]
[51.259 36.269]
[61.445 47.280]
[71.632 58.291]
[81.818 69.302]
[95.006 64.673]
[108.961 65.465]
[121.540 71.557]
[130.814 82.015]
[135.359 95.232]
[150.313 96.398]
[165.284 97.330]
[180.268 98.030]
[195.252 98.729]
[210.235 99.429]
[225.219 100.129]
[233.443 87.157]
[247.058 80.049]
[262.402 80.717]
[275.348 88.982]
[282.413 102.619]
[281.697 117.962]
[273.392 130.881]
[259.732 137.904]
[244.392 137.139]
[231.499 128.794]
[224.519 115.112]
[209.536 114.413]
[194.552 113.713]
[179.568 113.013]
[164.585 112.314]
[157.634 115.197]
[149.148 111.352]
[134.193 110.187]
[127.573 122.642]
[116.644 131.558]
[103.113 135.542]
[101.252 150.426]
[99.390 165.311]
[97.529 180.195]
[95.667 195.079]
[108.725 202.915]
[117.461 215.389]
[120.362 230.339]
[116.925 245.175]
] def
/pairs [
[9 96]
[10 95]
[11 94]
[12 93]
[13 92]
[17 60]
[18 59]
[19 58]
[20 57]
[21 56]
[23 54]
[30 53]
[31 52]
[32 51]
[34 50]
[35 49]
[36 47]
[37 46]
[38 45]
[39 44]
[65 89]
[66 88]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
] def

init

% Start Annotations
1 77 9  0 0.9 0.2 omark
79 100 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
