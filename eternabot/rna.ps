%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.8.4
%%CreationDate: Wed Jan 14 13:29:46 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
   exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
   % write text at base i plus offset dx, dy
   4 3 roll 1 sub coor exch get aload pop moveto
   3 1 roll fsize mul exch fsize mul exch rmoveto
   show
} bind def
/cmark { % i cmark   draw circle around base i
   newpath 1 sub coor exch get aload pop
   fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c cmark
   % draw basepair i,j with c counter examples in gray
   gsave
   3 min [0 0.33 0.66 0.9] exch get setgray
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   grestore
} bind def
/segmark { % f i j lw r g b segmark
   % mark segment [i,j] with outline width lw and color rgb
   % use omark and Fomark instead
   gsave
    setrgbcolor setlinewidth
    newpath
    1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch {
	    coor exch get aload pop lineto
    } for
    { closepath fill } if  stroke
   grestore
} bind def
/omark { % i j lw r g b omark
   % stroke segment [i..j] with linewidth lw, color rgb
   false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
   % fill segment [i..j] with color rgb
   % should precede drawbases
   1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
   % fill block between pairs (i,j) and (k,l) with color rgb
   % should precede drawbases
   gsave
    setrgbcolor
    newpath
    exch 4 3 roll exch 1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch { coor exch get aload pop lineto } for
    exch 1 sub exch 1 sub dup
    coor exch get aload pop lineto
    exch 1 exch { coor exch get aload pop lineto } for
    closepath fill stroke
   grestore
} bind def
/hsb {
    dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
   % draw basepair i,j in color
   % 1 index 0.00 ne {
   gsave
   newpath
   hsb
   fsize setlinewidth
   1 sub coor exch get aload pop moveto
   1 sub coor exch get aload pop lineto
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/cutpoint 77 def
/sequence (\
AGGGUCCGAAACUUGCCGAAAACGGCGAGACAUGAGGAUCACCCAUGUCUGCGACAGGUCCCAACACCUUCGCGUCA AUAAGACGAGCAAAAAGCUUGU\
) def
/coor [
[45.955 102.369]
[48.022 85.007]
[34.325 78.892]
[20.628 72.776]
[4.873 74.215]
[-3.595 61.961]
[-17.292 55.846]
[-25.377 65.104]
[-35.574 71.931]
[-47.177 75.867]
[-59.384 76.651]
[-71.356 74.240]
[-82.272 68.810]
[-91.387 60.742]
[-98.082 50.599]
[-112.432 54.968]
[-126.782 59.336]
[-141.132 63.704]
[-151.929 76.047]
[-167.962 72.603]
[-172.738 56.914]
[-161.343 45.121]
[-145.500 49.354]
[-131.150 44.986]
[-116.800 40.618]
[-102.450 36.250]
[-101.055 17.312]
[-92.180 0.526]
[-102.019 -10.796]
[-111.858 -22.119]
[-121.697 -33.441]
[-131.536 -44.763]
[-141.375 -56.086]
[-151.213 -67.408]
[-159.354 -71.938]
[-161.176 -79.239]
[-170.658 -90.862]
[-186.173 -96.174]
[-189.063 -112.317]
[-176.356 -122.683]
[-161.123 -116.610]
[-159.035 -100.344]
[-149.553 -88.721]
[-139.891 -77.247]
[-130.052 -65.925]
[-120.213 -54.602]
[-110.374 -43.280]
[-100.535 -31.958]
[-90.696 -20.635]
[-80.858 -9.313]
[-66.316 -15.256]
[-50.596 -16.004]
[-35.500 -11.452]
[-22.767 -2.103]
[-13.870 10.985]
[-9.846 26.321]
[-11.176 42.149]
[2.521 48.265]
[17.297 46.388]
[26.743 59.079]
[40.440 65.195]
[54.137 71.310]
[62.401 61.105]
[72.881 53.191]
[84.958 48.036]
[97.922 45.943]
[111.009 47.035]
[123.446 51.248]
[134.502 58.333]
[143.525 67.874]
[149.984 79.308]
[153.497 91.962]
[153.858 105.088]
[168.451 108.556]
[183.045 112.024]
[197.639 115.491]
[210.961 106.990]
[226.375 110.481]
[234.736 123.893]
[231.082 139.269]
[217.582 147.487]
[202.246 143.671]
[194.171 130.085]
[179.577 126.617]
[164.984 123.150]
[150.390 119.682]
[143.963 131.525]
[134.808 141.412]
[142.774 154.121]
[158.027 159.096]
[163.512 174.172]
[155.023 187.785]
[139.071 189.492]
[127.893 177.983]
[130.065 162.088]
[122.098 149.378]
[105.194 153.847]
[87.748 152.692]
[71.581 146.032]
[58.383 134.563]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[6 58]
[7 57]
[15 26]
[16 25]
[17 24]
[18 23]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[36 43]
[37 42]
[73 86]
[74 85]
[75 84]
[76 83]
[88 96]
[89 95]
] def

init

% Start Annotations
1 77 9  0 0.9 0.2 omark
79 100 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
